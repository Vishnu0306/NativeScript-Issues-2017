/*
In NativeScript, a file with the same name as an XML file is known as
a code-behind file. The code-behind is a great place to place your view
logic, and to set up your pageâ€™s data binding.
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var main_view_model_1 = require("./main-view-model");
var wv;
function navigatingTo(args) {
    var page = args.object;
    wv = page.getViewById("wv");
    wv.on("loadFinished", function (args) {
        console.log("getActualSize");
        console.log(wv.getActualSize().height);
        console.log(wv.getActualSize().width);
        console.log("getMeasuredHeight");
        console.log(wv.getMeasuredHeight());
        console.log("getMeasuredWidth");
        console.log(wv.getMeasuredWidth());
    });
    page.bindingContext = new main_view_model_1.HelloWorldModel();
}
exports.navigatingTo = navigatingTo;
function onWebViewLoaded(args) {
    var webview = args.object;
    setTimeout(function () {
        console.log("getActualSize");
        console.log(webview.getActualSize().height);
        console.log(webview.getActualSize().width);
        console.log("getMeasuredHeight");
        console.log(webview.getMeasuredHeight());
        console.log("getMeasuredWidth");
        console.log(webview.getMeasuredWidth());
    }, 100);
}
exports.onWebViewLoaded = onWebViewLoaded;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi1wYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibWFpbi1wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0VBSUU7OztBQUlGLHFEQUFvRDtBQUlwRCxJQUFJLEVBQVcsQ0FBQztBQUVoQixzQkFBNkIsSUFBZTtJQUV4QyxJQUFJLElBQUksR0FBUyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ2pDLEVBQUUsR0FBWSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRXJDLEVBQUUsQ0FBQyxFQUFFLENBQUMsY0FBYyxFQUFFLFVBQUMsSUFBSTtRQUN2QixPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxDQUFBO1FBQzVCLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3ZDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3RDLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQTtRQUNoQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLENBQUM7UUFDcEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFBO1FBQy9CLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLGdCQUFnQixFQUFFLENBQUMsQ0FBQztJQUN2QyxDQUFDLENBQUMsQ0FBQTtJQUVFLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxpQ0FBZSxFQUFFLENBQUM7QUFDaEQsQ0FBQztBQWhCRCxvQ0FnQkM7QUFFRCx5QkFBZ0MsSUFBSTtJQUNoQyxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBRTFCLFVBQVUsQ0FBQztRQUNQLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUE7UUFDNUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDNUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDM0MsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFBO1FBQ2hDLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLGlCQUFpQixFQUFFLENBQUMsQ0FBQztRQUN6QyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLENBQUE7UUFDL0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxDQUFDO0lBQzVDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztBQUNaLENBQUM7QUFaRCwwQ0FZQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5JbiBOYXRpdmVTY3JpcHQsIGEgZmlsZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgYW4gWE1MIGZpbGUgaXMga25vd24gYXNcbmEgY29kZS1iZWhpbmQgZmlsZS4gVGhlIGNvZGUtYmVoaW5kIGlzIGEgZ3JlYXQgcGxhY2UgdG8gcGxhY2UgeW91ciB2aWV3XG5sb2dpYywgYW5kIHRvIHNldCB1cCB5b3VyIHBhZ2XigJlzIGRhdGEgYmluZGluZy5cbiovXG5cbmltcG9ydCB7IEV2ZW50RGF0YSB9IGZyb20gJ2RhdGEvb2JzZXJ2YWJsZSc7XG5pbXBvcnQgeyBQYWdlIH0gZnJvbSAndWkvcGFnZSc7XG5pbXBvcnQgeyBIZWxsb1dvcmxkTW9kZWwgfSBmcm9tICcuL21haW4tdmlldy1tb2RlbCc7XG5cbmltcG9ydCB7IFdlYlZpZXcsIExvYWRFdmVudERhdGEgfSBmcm9tIFwidWkvd2ViLXZpZXdcIjtcblxubGV0IHd2OiBXZWJWaWV3O1xuXG5leHBvcnQgZnVuY3Rpb24gbmF2aWdhdGluZ1RvKGFyZ3M6IEV2ZW50RGF0YSkge1xuXG4gICAgbGV0IHBhZ2UgPSA8UGFnZT5hcmdzLm9iamVjdDtcbnd2ID0gPFdlYlZpZXc+cGFnZS5nZXRWaWV3QnlJZChcInd2XCIpO1xuXG53di5vbihcImxvYWRGaW5pc2hlZFwiLCAoYXJncykgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiZ2V0QWN0dWFsU2l6ZVwiKVxuICAgIGNvbnNvbGUubG9nKHd2LmdldEFjdHVhbFNpemUoKS5oZWlnaHQpO1xuICAgIGNvbnNvbGUubG9nKHd2LmdldEFjdHVhbFNpemUoKS53aWR0aCk7XG4gICAgY29uc29sZS5sb2coXCJnZXRNZWFzdXJlZEhlaWdodFwiKVxuICAgIGNvbnNvbGUubG9nKHd2LmdldE1lYXN1cmVkSGVpZ2h0KCkpO1xuICAgIGNvbnNvbGUubG9nKFwiZ2V0TWVhc3VyZWRXaWR0aFwiKVxuICAgIGNvbnNvbGUubG9nKHd2LmdldE1lYXN1cmVkV2lkdGgoKSk7XG59KVxuXG4gICAgcGFnZS5iaW5kaW5nQ29udGV4dCA9IG5ldyBIZWxsb1dvcmxkTW9kZWwoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uV2ViVmlld0xvYWRlZChhcmdzKSB7XG4gICAgdmFyIHdlYnZpZXcgPSBhcmdzLm9iamVjdDtcblxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiZ2V0QWN0dWFsU2l6ZVwiKVxuICAgICAgICBjb25zb2xlLmxvZyh3ZWJ2aWV3LmdldEFjdHVhbFNpemUoKS5oZWlnaHQpO1xuICAgICAgICBjb25zb2xlLmxvZyh3ZWJ2aWV3LmdldEFjdHVhbFNpemUoKS53aWR0aCk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiZ2V0TWVhc3VyZWRIZWlnaHRcIilcbiAgICAgICAgY29uc29sZS5sb2cod2Vidmlldy5nZXRNZWFzdXJlZEhlaWdodCgpKTtcbiAgICAgICAgY29uc29sZS5sb2coXCJnZXRNZWFzdXJlZFdpZHRoXCIpXG4gICAgICAgIGNvbnNvbGUubG9nKHdlYnZpZXcuZ2V0TWVhc3VyZWRXaWR0aCgpKTtcbiAgICB9LCAxMDApO1xufSJdfQ==