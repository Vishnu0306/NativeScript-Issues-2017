"use strict";
var main_view_model_1 = require('./main-view-model');
var color_1 = require("color");
var listview_1 = require("nativescript-telerik-ui-pro/listview");
var platform_1 = require("platform");
var listView;
var lblSelection;
var isRad;
var page;
function pageStoriesPagesLoaded(args) {
    page = args.object;
    page.bindingContext = new main_view_model_1.ViewModel();
}
exports.pageStoriesPagesLoaded = pageStoriesPagesLoaded;
function onRadListLoaded(args) {
    var radList = args.object;
    if (args.object instanceof listview_1.RadListView) {
        //console.log("RadListView");
        isRad = true;
    }
}
exports.onRadListLoaded = onRadListLoaded;
function onItemLoading(args) {
    if (args.ios) {
        console.log("setIosListItemTransparentBackground triggered");
        setIosListItemTransparentBackground(args);
    }
}
exports.onItemLoading = onItemLoading;
;
function setIosListItemTransparentBackground(args) {
    // if (isRad) { //RadListView?
    //     console.log("isRad RadListView");
    //     var iosColor = new Color(20, 255, 0, 0).ios;
    //     args.ios.backgroundView.backgroundColor = iosColor;
    // }
    console.log("instance of RadListView: " + (args.view.parent instanceof listview_1.RadListView));
    if (platform_1.isIOS) {
        if (args.view.parent instanceof listview_1.RadListView) {
            //transparent, so that list item has same color as page-background
            var iosColor = new color_1.Color(0, 0, 0, 0).ios;
            args.ios.backgroundView.backgroundColor = iosColor;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtcGFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1vZGFsLXBhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUVBLGdDQUEwQixtQkFBbUIsQ0FBQyxDQUFBO0FBQzlDLHNCQUFzQixPQUFPLENBQUMsQ0FBQTtBQUc5Qix5QkFBNEIsc0NBQXNDLENBQUMsQ0FBQTtBQUVuRSx5QkFBc0IsVUFBVSxDQUFDLENBQUE7QUFJakMsSUFBSSxRQUFRLENBQUM7QUFDYixJQUFJLFlBQVksQ0FBQztBQUNqQixJQUFJLEtBQWMsQ0FBQztBQUNuQixJQUFJLElBQVUsQ0FBQztBQUlmLGdDQUF1QyxJQUFJO0lBQ3ZDLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ25CLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSwyQkFBUyxFQUFFLENBQUM7QUFDMUMsQ0FBQztBQUhlLDhCQUFzQix5QkFHckMsQ0FBQTtBQUdELHlCQUFnQyxJQUFJO0lBQ2hDLElBQUksT0FBTyxHQUFnQixJQUFJLENBQUMsTUFBTSxDQUFDO0lBQ3ZDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLFlBQVksc0JBQVcsQ0FBQyxDQUFDLENBQUM7UUFDckMsNkJBQTZCO1FBQzdCLEtBQUssR0FBRyxJQUFJLENBQUM7SUFDakIsQ0FBQztBQUNMLENBQUM7QUFOZSx1QkFBZSxrQkFNOUIsQ0FBQTtBQUVELHVCQUE4QixJQUFJO0lBQzlCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ1gsT0FBTyxDQUFDLEdBQUcsQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDO1FBQzdELG1DQUFtQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzlDLENBQUM7QUFDTCxDQUFDO0FBTGUscUJBQWEsZ0JBSzVCLENBQUE7QUFBQSxDQUFDO0FBRUYsNkNBQTZDLElBQUk7SUFDN0MsOEJBQThCO0lBQzlCLHdDQUF3QztJQUN4QyxtREFBbUQ7SUFDbkQsMERBQTBEO0lBQzFELElBQUk7SUFDSixPQUFPLENBQUMsR0FBRyxDQUFDLDJCQUEyQixHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLFlBQVksc0JBQVcsQ0FBQyxDQUFDLENBQUM7SUFFckYsRUFBRSxDQUFDLENBQUMsZ0JBQUssQ0FBQyxDQUFDLENBQUM7UUFDUixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sWUFBWSxzQkFBVyxDQUFDLENBQUMsQ0FBQztZQUMxQyxrRUFBa0U7WUFDbEUsSUFBSSxRQUFRLEdBQUcsSUFBSSxhQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDO1lBQ3pDLElBQUksQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLGVBQWUsR0FBRyxRQUFRLENBQUM7UUFDdkQsQ0FBQztJQUNMLENBQUM7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnREYXRhIH0gZnJvbSAnZGF0YS9vYnNlcnZhYmxlJztcbmltcG9ydCB7IFBhZ2UgfSBmcm9tICd1aS9wYWdlJztcbmltcG9ydCB7IFZpZXdNb2RlbCB9IGZyb20gJy4vbWFpbi12aWV3LW1vZGVsJztcbmltcG9ydCB7IENvbG9yIH0gZnJvbSBcImNvbG9yXCI7XG5cbmltcG9ydCB7IExpc3RWaWV3IH0gZnJvbSBcInVpL2xpc3Qtdmlld1wiO1xuaW1wb3J0IHsgUmFkTGlzdFZpZXcgfSBmcm9tIFwibmF0aXZlc2NyaXB0LXRlbGVyaWstdWktcHJvL2xpc3R2aWV3XCI7XG5cbmltcG9ydCB7IGlzSU9TIH0gZnJvbSBcInBsYXRmb3JtXCI7XG5cbmltcG9ydCAqIGFzIHV0aWxzTW9kdWxlIGZyb20gXCJ1dGlscy91dGlsc1wiO1xuXG52YXIgbGlzdFZpZXc7XG52YXIgbGJsU2VsZWN0aW9uO1xubGV0IGlzUmFkOiBib29sZWFuO1xubGV0IHBhZ2U6IFBhZ2U7XG5cbmRlY2xhcmUgdmFyIFVJQ29sb3I6IGFueTtcblxuZXhwb3J0IGZ1bmN0aW9uIHBhZ2VTdG9yaWVzUGFnZXNMb2FkZWQoYXJncykge1xuICAgIHBhZ2UgPSBhcmdzLm9iamVjdDtcbiAgICBwYWdlLmJpbmRpbmdDb250ZXh0ID0gbmV3IFZpZXdNb2RlbCgpO1xufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiBvblJhZExpc3RMb2FkZWQoYXJncykge1xuICAgIGxldCByYWRMaXN0ID0gPFJhZExpc3RWaWV3PmFyZ3Mub2JqZWN0O1xuICAgIGlmIChhcmdzLm9iamVjdCBpbnN0YW5jZW9mIFJhZExpc3RWaWV3KSB7XG4gICAgICAgIC8vY29uc29sZS5sb2coXCJSYWRMaXN0Vmlld1wiKTtcbiAgICAgICAgaXNSYWQgPSB0cnVlO1xuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uSXRlbUxvYWRpbmcoYXJncykge1xuICAgIGlmIChhcmdzLmlvcykge1xuICAgICAgICBjb25zb2xlLmxvZyhcInNldElvc0xpc3RJdGVtVHJhbnNwYXJlbnRCYWNrZ3JvdW5kIHRyaWdnZXJlZFwiKTtcbiAgICAgICAgc2V0SW9zTGlzdEl0ZW1UcmFuc3BhcmVudEJhY2tncm91bmQoYXJncyk7XG4gICAgfVxufTtcblxuZnVuY3Rpb24gc2V0SW9zTGlzdEl0ZW1UcmFuc3BhcmVudEJhY2tncm91bmQoYXJncykge1xuICAgIC8vIGlmIChpc1JhZCkgeyAvL1JhZExpc3RWaWV3P1xuICAgIC8vICAgICBjb25zb2xlLmxvZyhcImlzUmFkIFJhZExpc3RWaWV3XCIpO1xuICAgIC8vICAgICB2YXIgaW9zQ29sb3IgPSBuZXcgQ29sb3IoMjAsIDI1NSwgMCwgMCkuaW9zO1xuICAgIC8vICAgICBhcmdzLmlvcy5iYWNrZ3JvdW5kVmlldy5iYWNrZ3JvdW5kQ29sb3IgPSBpb3NDb2xvcjtcbiAgICAvLyB9XG4gICAgY29uc29sZS5sb2coXCJpbnN0YW5jZSBvZiBSYWRMaXN0VmlldzogXCIgKyAoYXJncy52aWV3LnBhcmVudCBpbnN0YW5jZW9mIFJhZExpc3RWaWV3KSk7XG5cbiAgICBpZiAoaXNJT1MpIHtcbiAgICAgICAgaWYgKGFyZ3Mudmlldy5wYXJlbnQgaW5zdGFuY2VvZiBSYWRMaXN0Vmlldykge1xuICAgICAgICAgICAgLy90cmFuc3BhcmVudCwgc28gdGhhdCBsaXN0IGl0ZW0gaGFzIHNhbWUgY29sb3IgYXMgcGFnZS1iYWNrZ3JvdW5kXG4gICAgICAgICAgICB2YXIgaW9zQ29sb3IgPSBuZXcgQ29sb3IoMCwgMCwgMCwgMCkuaW9zO1xuICAgICAgICAgICAgYXJncy5pb3MuYmFja2dyb3VuZFZpZXcuYmFja2dyb3VuZENvbG9yID0gaW9zQ29sb3I7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=